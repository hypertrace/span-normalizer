service.name = span-normalizer
service.admin.port = 8099

main.class = org.hypertrace.core.spannormalizer.SpanNormalizer

span.type = jaeger

flink.job {
  parallelism = 4
  metrics {
    metrics.reporters = "prometheus"
    metrics.reporter.prometheus.class = "org.hypertrace.core.serviceframework.metrics.flink.PrometheusReporter"
  }
}

flink.source {
  type = kafka
  topic = jaeger-spans
  kafka {
    bootstrap.servers = "localhost:9092"
    bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
    group.id = "jaeger-spans-to-raw-spans-job"
    auto.offset.reset = "latest"
    enable.auto.commit = true
    auto.commit.interval.ms = 5000
  }
}

flink.sink {
  type = kafka
  topic = raw-spans-from-jaeger-spans
  log.failures.only = true
  schema.registry {
    schema.registry.url = "http://localhost:8081"
    schema.registry.url = ${?SCHEMA_REGISTRY_URL}
    value.subject.name.strategy = "io.confluent.kafka.serializers.subject.TopicRecordNameStrategy"
  }
  kafka {
    bootstrap.servers = "localhost:9092"
    bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
  }
}

processor {
  defaultTenantId = ${?DEFAULT_TENANT_ID}
}

logger.names = ["file"]
logger.file.dir = "/var/logs/span-normalizer"

metrics.reporter.prefix = org.hypertrace.core.spannormalizer.jobSpanNormalizer
metrics.reporter.names = ["prometheus"]
metrics.reportInterval = 60
