service.name = span-normalizer
service.admin.port = 8099

main.class = org.hypertrace.core.spannormalizer.SpanNormalizer

span.type = jaeger
input.topic = "jaeger-spans"
output.topic = "raw-spans-from-jaeger-spans"
precreate.topics = false
precreate.topics = ${?PRE_CREATE_TOPICS}

kafka.streams.config = {
  application.id = jaeger-spans-to-raw-spans-job
  metrics.recording.level = INFO
  num.stream.threads = 2
  producer.compression.type = gzip
  topology.optimization = all

  bootstrap.servers = "localhost:9092"
  bootstrap.servers = ${?KAFKA_BOOTSTRAP_SERVERS}
  auto.offset.reset = "latest"
  auto.commit.interval.ms = 5000
}

schema.registry.config {
  schema.registry.url = "http://localhost:8081"
  schema.registry.url = ${?SCHEMA_REGISTRY_URL}
  specific.avro.reader = true
}

processor {
  defaultTenantId = ${?DEFAULT_TENANT_ID}
}

logger.names = ["file"]
logger.file.dir = "/var/logs/span-normalizer"

metrics.reporter.prefix = org.hypertrace.core.spannormalizer.jobSpanNormalizer
metrics.reporter.names = ["prometheus"]
metrics.reportInterval = 60
